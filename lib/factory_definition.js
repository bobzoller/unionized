// Generated by CoffeeScript 1.7.1
var FactoryDefinition, dotpath, _;

_ = require('./helpers');

dotpath = require('./dotpath');

module.exports = FactoryDefinition = (function() {
  function FactoryDefinition(attrs, mode, args) {
    this.attrs = attrs != null ? attrs : {};
    this.mode = mode;
    this.args = args;
    this._out = {};
    this.setAttrs();
  }

  FactoryDefinition.prototype.setAttrs = function() {
    var path, value, _ref, _results;
    _ref = this.attrs;
    _results = [];
    for (path in _ref) {
      value = _ref[path];
      if (value !== void 0) {
        _results.push(dotpath.set(this._out, path, value));
      }
    }
    return _results;
  };

  FactoryDefinition.prototype.set = function(path, value, options) {
    if (options == null) {
      options = {};
    }
    if (dotpath.containsSubpath(this.attrs, path)) {
      return;
    }
    if (options.init == null) {
      options.init = true;
    }
    dotpath.set(this._out, path, value, options.init);
    return value;
  };

  FactoryDefinition.prototype.unset = function(path) {
    return dotpath.clear(this._out, path);
  };

  FactoryDefinition.prototype.embed = function(path, factory, callback) {
    if (dotpath.containsSubpath(this.attrs, path)) {
      return _.defer(callback);
    }
    return factory[this.mode](this.get(path), (function(_this) {
      return function(err, value) {
        if (err != null) {
          return callback(err);
        }
        _this.set(path, value);
        return callback(null, value);
      };
    })(this));
  };

  FactoryDefinition.prototype.embedArray = function(path, defaultCount, factory, callback) {
    return callback();
  };

  FactoryDefinition.prototype.get = function(path) {
    return dotpath.get(this._out, path);
  };

  FactoryDefinition.prototype._resolve = function() {
    return this._out;
  };

  return FactoryDefinition;

})();
